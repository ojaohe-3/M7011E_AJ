# thanks to https://github.com/nicholasjackson/envoy-experiments/tree/master/routing-simple for instruction and explanation on http routing. This is just the tip of the ice berg and im just starting to learning.
# additional configuration is nescessary for scalability, as new cluster has to be defined, a handler that deals with expanding docker swarm etc. unlikley this project ever reach that scope.
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 4000
    filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
            codec_type: http1
            stat_prefix: ingress_http
            route_config:
              name: local_route
              virtual_hosts:
                - name: backend
                  domains:
                    - "*"
                  routes:
                    - match: {prefix: "/simulator" }
                      route:
                        cluster: simulator
                    - match: {prefix: "/market" }
                      route:
                        cluster: market
                    - match: { prefix: "/prosumer" }
                      route:
                        cluster: prosumer
                    - match: { prefix: "/manager" }
                      route:
                        cluster: manager
                    - match: { prefix: "/" }
                      route:
                        cluster: frontend
          http_filters:
            - name: envoy.filters.http.router
              typed_config: 
                {}

  clusters:
    - name: simulator
      connect_timeout: 5.00s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: simulator
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 192.168.1.7
                  port_value: 5000
                  ipv_compat: true
    - name: market
      connect_timeout: 5.00s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: market
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 192.168.1.7
                  port_value: 5001
                  ipv_compat: true 
    - name: prosumer
      connect_timeout: 5.00s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: prosumer
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 192.168.1.7
                  port_value: 5002
                  ipv_compat: true      
    - name: manager
      connect_timeout: 5.00s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: manager
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 192.168.1.7
                  port_value: 5003
                  ipv_compat: true
    - name: frontend
      connect_timeout: 5.00s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: frontend
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 192.168.1.7
                  port_value: 8080
                  ipv_compat: true    
